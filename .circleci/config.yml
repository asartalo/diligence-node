# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 
    docker:
      # specify the version you desire here
      - image: circleci/node:12.13-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      # install selenium
      - run: 
          name: Selenium Standalone Installation 
          command: npm run install-selenium

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run selenium in the background
      - run: 
          name: Start Selenium
          command: npm run selenium-start
          background: true

      - run:
          name: Setup Code Climate test-reporter
          command: |
          # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run: 
          name: Run Unit Tests
          command: |
          # notify Code Climate of a pending test report using `before-build`
            ./cc-test-reporter before-build
            npm run test
          # upload test report to Code Climate using `after-build`
            ./cc-test-reporter after-build --coverage-input-type lcov --exit-c

      - run: 
          name: Compile Extension for End-to-End Tests
          command: npm run compile e2e

      # run e2e tests
      - run: 
          name: Run End-to-End Tests
          command: npm run e2e

